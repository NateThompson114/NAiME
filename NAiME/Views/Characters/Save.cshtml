@using NAiME.Models.Character
@model NAiME.Models.Character.Character
@{
    var characterType = Model.Id == 0 ? "New" : "Edit";
}

<h2>@characterType Character</h2>

@using (Html.BeginForm("Save", "Characters"))
{
    <p>*Required Fields</p>
    @Html.ValidationSummary(true, "Please fix the following errors.", new { @class = "validation-summary-errors" })

    @Html.HiddenFor(m => m.Id)

    <!--Character Name-->
    <table>

        <tbody>
            <tr>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Name)*
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Name)
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(m => m.CharacterLevel.Level)*
                        @Html.TextBoxFor(m => m.CharacterLevel.Level, new { type = "number", min = "0", max = "20", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CharacterLevel.Level)
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(m => m.CharacterLevel.ExperiencePoints)*
                        @Html.TextBoxFor(m => m.CharacterLevel.ExperiencePoints, new { type = "number", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CharacterLevel.ExperiencePoints)
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-2 text-center">
                @Html.Partial("Partials/Save/_saveStats")
            </div>
            <div class="col-md-4">
                @if (Model.Id > 0)
                {
                    <div class="form-control">
                        @Html.CheckBoxFor(m => m.Inspiration, new { @class = "" })
                        @Html.LabelFor(m => m.Inspiration)
                        @Html.ValidationMessageFor(m => m.Inspiration)
                    </div>
                }
                <h3>Saving Throws</h3>
                @Html.Partial("Partials/Save/_saveThrows")
            </div>
            <div class="col-md-6">
                <h3>Armor / Hit Points /Etc</h3>
            </div>
        </div>
    </div>
    <table>
        <tr>
            <td class="col-sm-2"></td>
            <td class="col-sm-4" style="vertical-align: top;"></td>
            <td class="col-sm-6">&nbsp;</td>
        </tr>
    </table>




    <h3>Skills</h3>
    <table class="table-bordered table-condensed">
        <thead>
            <tr>
                <th>Skill</th>
                <th>Proficient</th>
            </tr>
        </thead>
        <tbody>

            <tr>
                <td>
                    Acrobatics
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.AcrobaticsDex, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    Animal Handling
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.AnimalHandlingWis, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    Athletics
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.AthleticsStr, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    Deception
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.DeceptionCha, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    History
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.HistoryInt, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    Insight
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.InsightWis, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    Intimidation
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.IntimidationCha, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    Investigation
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.InvestigationInt, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    Lore
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.LoreInt, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    Medicine
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.MedicineWis, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    Nature
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.NatureInt, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    Perception
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.PerceptionWis, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    Performance
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.PerformanceCha, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    Persuasion
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.PersuasionCha, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    Riddle
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.RiddleInt, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    Shadow Lore
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.ShadowLoreInt, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    Sleight of Hand
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.SleightOfHandDex, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    Stealth
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.StealthDex, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    Survival
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.SurvivalWis, new { @class = "form-control" })
                </td>
            </tr>

            <tr>
                <td>
                    Traditions
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.CharacterSkills.TraditionsInt, new { @class = "form-control" })
                </td>
            </tr>

        </tbody>
    </table>

    @Html.AntiForgeryToken()

    <button type="submit" class="btn btn-primary">Save</button>
}
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            var cards = $(".cardStatTarget");
            setInterval(function () {
                $("#strCardEnd").val(
                    Math.floor(($("#strCardStart").val() - 10) / 2)
                );
                $("#dexCardEnd").val(
                    Math.floor(($("#dexCardStart").val() - 10) / 2)
                );
                $("#conCardEnd").val(
                    Math.floor(($("#conCardStart").val() - 10) / 2)
                );
                $("#intCardEnd").val(
                    Math.floor(($("#intCardStart").val() - 10) / 2)
                );
                $("#wisCardEnd").val(
                    Math.floor(($("#wisCardStart").val() - 10) / 2)
                );
                $("#chaCardEnd").val(
                    Math.floor(($("#chaCardStart").val() - 10) / 2)
                );
            }, 200);
        });
    </script>
}